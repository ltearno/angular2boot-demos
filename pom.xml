<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
	
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.0.RELEASE</version>
	</parent>
	
    <groupId>fr.lteconsulting</groupId>
    <artifactId>angular2boot-demos</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
	
    <name>Angular2Boot demo projects</name>
    <description>Demo projects for angular 2 boot</description>
    <url>http://www.lteconsulting.fr</url>
	
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<gwt.version>2.8.0</gwt.version>
		<gwt.plugin.version>2.8.0</gwt.plugin.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<angular2-gwt.version>1.7</angular2-gwt.version>
	</properties>
	
    <modules>
        <module>canvas</module>
		<module>memos</module>
		<module>misc-samples</module>
		<module>my-first-tree-orchard</module>
		<module>primeng-demo</module>
		<module>widgets-integration</module>
		<module>widgets-integration-wayback</module>
    </modules>
	
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<!-- conflicts with the one from GWT -->
				<exclusion>
					<artifactId>validation-api</artifactId>
					<groupId>javax.validation</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Needed mainly to get the EntryPoint class -->
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwt.version}</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<artifactId>validation-api</artifactId>
					<groupId>javax.validation</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Library to integrate with Angular2 -->
		<dependency>
			<groupId>fr.lteconsulting</groupId>
			<artifactId>angular2-gwt</artifactId>
			<version>${angular2-gwt.version}</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>
	
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<!-- version is important to have java annotation processing correctly handled -->
					<version>3.3</version><!--$NO-MVN-MAN-VER$-->
					<configuration>
						<compilerArgument>-parameters</compilerArgument>
						<testCompilerArgument>-parameters</testCompilerArgument>
						<useIncrementalCompilation>false</useIncrementalCompilation>
						<source>1.8</source>
						<target>1.8</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>gwt-maven-plugin</artifactId>
					<version>${gwt.plugin.version}</version>
					<executions>
						<execution>
							<phase>compile</phase>
							<goals>
								<goal>compile</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<runTarget>http://localhost:8080</runTarget>
						<generateJsInteropExports>true</generateJsInteropExports>
						
						<webappDirectory>${project.build.directory}/classes/public</webappDirectory>
						<codeServerWorkDir>${project.build.directory}/classes/public</codeServerWorkDir>
						<launcherDir>${project.build.directory}/classes/public</launcherDir>
						
						<compileReport>true</compileReport>

						<gen>${basedir}/target/gwt-gen</gen>
						<workDir>${project.build.directory}/gwt-work</workDir>
						<deploy>${project.build.directory}/gwt-deploy</deploy>
						<persistentunitcache>true</persistentunitcache>
						<persistentunitcachedir>${basedir}/target/gwt-unitCache</persistentunitcachedir>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<configuration>
						<addResources>true</addResources>
					</configuration>
					<!-- allows to live reload server java code when using spring-boot:run -->
					<dependencies>
						<dependency>
							<groupId>org.springframework</groupId>
							<artifactId>springloaded</artifactId>
							<version>1.2.6.RELEASE</version>
						</dependency>
					</dependencies>
				</plugin>
				
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>gwt-maven-plugin</artifactId>
										<versionRange>[2.8.0-beta1,)</versionRange>
										<goals>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
